name: Build Python Wheels

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    # matrix over OS and Python versions
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.8, 3.9, 3.10, 3.11, 3.12, 3.13]

    steps:
      # 1. Check out your code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Cache cargo registry, git index, and build output
      - name: Cache Cargo registry & build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # 3. Install Rust (stable) via actions-rs
      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # 4. Install the matching Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # 5. Install maturin (and wheel tooling)
      - name: Install maturin
        run: pip install maturin setuptools wheel

      # 6. Build a wheel
      - name: Build wheel
        env:
          PYVER: ${{ matrix.python-version }}
        run: |
          maturin build --release --strip -i python$PYVER

      # 7. Upload the built wheels for inspection or later publishing
      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-py${{ matrix.python-version }}
          path: target/wheels/*.whl

